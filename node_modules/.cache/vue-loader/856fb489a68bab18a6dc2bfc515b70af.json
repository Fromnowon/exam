{"remainingRequest":"/Users/zihang/Desktop/lzgz-exam/vue-admin-template/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zihang/Desktop/lzgz-exam/vue-admin-template/src/views/EditProblem/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zihang/Desktop/lzgz-exam/vue-admin-template/src/views/EditProblem/index.vue","mtime":1572268130000},{"path":"/Users/zihang/Desktop/lzgz-exam/vue-admin-template/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zihang/Desktop/lzgz-exam/vue-admin-template/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zihang/Desktop/lzgz-exam/vue-admin-template/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zihang/Desktop/lzgz-exam/vue-admin-template/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport Editor from \"@/components/TinyMce\";\r\nimport Qs from \"qs\";\r\nimport { mapGetters } from \"vuex\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      options_msg: \"\",\r\n      edit_options: true,\r\n      type_arr: [\"单项选择题\", \"多项选择题\", \"判断题\", \"简答题\"],\r\n      subject_obj: {\r\n        yw: \"语文\",\r\n        sx: \"数学\",\r\n        yy: \"英语\",\r\n        wl: \"物理\",\r\n        hx: \"化学\",\r\n        sw: \"生物\",\r\n        ls: \"历史\",\r\n        zz: \"政治\",\r\n        dl: \"地理\",\r\n        xx: \"信息技术\",\r\n        xl: \"心理\",\r\n        ys: \"艺术\",\r\n        qt: \"其他\"\r\n      },\r\n      data: {\r\n        type: \"\", //题型\r\n        subject: \"\",\r\n        tags: [\"LZGZ_EXAM\"],\r\n        public: true,\r\n        description: \"\",\r\n        options: {\r\n          num: \"\", // 选项总数\r\n          right: null, // 正确答案\r\n          arr: \"\" // 选项内容\r\n        }\r\n      },\r\n      inputVisible: false,\r\n      inputValue: \"\",\r\n      type_arr: [\"单项选择题\", \"多项选择题\", \"判断题\", \"简答题\"],\r\n      dialogVisible: false,\r\n      postLoading: false,\r\n      id: undefined\r\n    };\r\n  },\r\n  mounted() {\r\n    this.id = this.$route.query.id;\r\n    if (this.id != undefined) {\r\n      //编辑\r\n      this.$axios\r\n        .get(this.api, {\r\n          params: {\r\n            action: \"getProblemsDetail\",\r\n            id: this.id\r\n          }\r\n        })\r\n        .then(res => {\r\n          let data = res.data.msg;\r\n          //修正数据类型\r\n          data.type = Number(data.type);\r\n          data.public = Boolean(data.public);\r\n          data.tags = this.strToJson(data.tags);\r\n          data.options = this.strToJson(data.options);\r\n\r\n          if (data.type != 3) {\r\n            this.options_msg = data.options.arr.join(\"\\n\");\r\n            data.options.right = Number(data.options.right);\r\n          } else this.options_msg = data.options.right;\r\n          this.edit_options = false;\r\n          this.data = data;\r\n        });\r\n    }\r\n  },\r\n  methods: {\r\n    post() {\r\n      this.postLoading = true;\r\n      this.data[\"author\"] = this.name;\r\n      this.$axios\r\n        .post(this.api + \"?action=newProblem\", Qs.stringify(this.data))\r\n        .then(res => {\r\n          if (res.data.code == 200) {\r\n            this.postLoading = false;\r\n            this.dialogVisible = false;\r\n            if (this.id != undefined) {\r\n              //完成编辑\r\n              this.$router.push({\r\n                path: \"/list-problems\"\r\n              });\r\n            } else {\r\n              //完成导入，提示是否继续\r\n              this.$confirm(\"添加题目成功！是否以相同配置继续添加？\", \"提示\", {\r\n                confirmButtonText: \"确定\",\r\n                cancelButtonText: \"取消\",\r\n                type: \"success\"\r\n              })\r\n                .then(() => {\r\n                  //初始化部分题目数据\r\n                  this.data.description = \"\";\r\n                  this.data.options = {\r\n                    num: \"\", // 选项总数\r\n                    right: this.data.type == 1 ? [] : \"\", // 正确答案\r\n                    arr: \"\"\r\n                  };\r\n                  //初始化编辑界面\r\n                  this.options_msg = \"\";\r\n                  this.edit_options = true;\r\n                })\r\n                .catch(() => {\r\n                  //初始化全部信息\r\n                  this.data = {\r\n                    type: \"\", //题型\r\n                    subject: \"\",\r\n                    tags: [\"LZGZ_EXAM\"],\r\n                    public: true,\r\n                    description: \"\",\r\n                    options: {\r\n                      num: \"\", // 选项总数\r\n                      right: null, // 正确答案\r\n                      arr: \"\" // 选项内容\r\n                    }\r\n                  };\r\n                  this.options_msg = \"\";\r\n                  this.edit_options = true;\r\n                });\r\n            }\r\n          } else {\r\n            console.log(res.data);\r\n            this.postLoading = false;\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    },\r\n    chooseType(value) {\r\n      if (value == 1) this.data.options.right = [];\r\n      else this.data.options.right = \"\";\r\n    },\r\n    handleClose(tag) {\r\n      this.data.tags.splice(this.data.tags.indexOf(tag), 1);\r\n    },\r\n\r\n    showInput() {\r\n      this.inputVisible = true;\r\n      this.$nextTick(_ => {\r\n        this.$refs.saveTagInput.$refs.input.focus();\r\n      });\r\n    },\r\n\r\n    handleInputConfirm() {\r\n      let inputValue = this.inputValue;\r\n      if (inputValue) {\r\n        this.data.tags.push(inputValue);\r\n      }\r\n      this.inputVisible = false;\r\n      this.inputValue = \"\";\r\n    },\r\n\r\n    generateOptions() {\r\n      //生成选项\r\n      this.edit_options = false;\r\n      let arr_tmp = this.options_msg.split(\"\\n\");\r\n      let arr = [];\r\n      for (let index in arr_tmp) {\r\n        if (arr_tmp[index].length > 0) {\r\n          arr.push(arr_tmp[index]);\r\n        }\r\n      }\r\n      this.$set(this.data.options, \"num\", arr.length);\r\n      this.$set(this.data.options, \"arr\", arr);\r\n    },\r\n    back() {\r\n      this.$router.go(-1);\r\n    },\r\n    strToJson(objStr) {\r\n      //字符串转json\r\n      return new Function(\"return \" + objStr)();\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"name\"])\r\n  },\r\n  components: {\r\n    Editor\r\n  }\r\n};\r\n",null]}