{"remainingRequest":"/Users/zihang/Desktop/lzgz-exam/vue-admin-template/node_modules/babel-loader/lib/index.js!/Users/zihang/Desktop/lzgz-exam/vue-admin-template/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zihang/Desktop/lzgz-exam/vue-admin-template/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zihang/Desktop/lzgz-exam/vue-admin-template/src/views/EditProblem/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zihang/Desktop/lzgz-exam/vue-admin-template/src/views/EditProblem/index.vue","mtime":1572268130000},{"path":"/Users/zihang/Desktop/lzgz-exam/vue-admin-template/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zihang/Desktop/lzgz-exam/vue-admin-template/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zihang/Desktop/lzgz-exam/vue-admin-template/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zihang/Desktop/lzgz-exam/vue-admin-template/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/zihang/Desktop/lzgz-exam/vue-admin-template/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectSpread2 = _interopRequireDefault(require(\"/Users/zihang/Desktop/lzgz-exam/vue-admin-template/node_modules/@babel/runtime-corejs2/helpers/objectSpread2\"));\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nvar _defineProperty2 = _interopRequireDefault(require(\"/Users/zihang/Desktop/lzgz-exam/vue-admin-template/node_modules/@babel/runtime-corejs2/helpers/defineProperty\"));\n\nvar _TinyMce = _interopRequireDefault(require(\"@/components/TinyMce\"));\n\nvar _qs = _interopRequireDefault(require(\"qs\"));\n\nvar _vuex = require(\"vuex\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  data: function data() {\n    var _ref;\n\n    return _ref = {\n      options_msg: \"\",\n      edit_options: true,\n      type_arr: [\"单项选择题\", \"多项选择题\", \"判断题\", \"简答题\"],\n      subject_obj: {\n        yw: \"语文\",\n        sx: \"数学\",\n        yy: \"英语\",\n        wl: \"物理\",\n        hx: \"化学\",\n        sw: \"生物\",\n        ls: \"历史\",\n        zz: \"政治\",\n        dl: \"地理\",\n        xx: \"信息技术\",\n        xl: \"心理\",\n        ys: \"艺术\",\n        qt: \"其他\"\n      },\n      data: {\n        type: \"\",\n        //题型\n        subject: \"\",\n        tags: [\"LZGZ_EXAM\"],\n        public: true,\n        description: \"\",\n        options: {\n          num: \"\",\n          // 选项总数\n          right: null,\n          // 正确答案\n          arr: \"\" // 选项内容\n\n        }\n      },\n      inputVisible: false,\n      inputValue: \"\"\n    }, (0, _defineProperty2.default)(_ref, \"type_arr\", [\"单项选择题\", \"多项选择题\", \"判断题\", \"简答题\"]), (0, _defineProperty2.default)(_ref, \"dialogVisible\", false), (0, _defineProperty2.default)(_ref, \"postLoading\", false), (0, _defineProperty2.default)(_ref, \"id\", undefined), _ref;\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.id = this.$route.query.id;\n\n    if (this.id != undefined) {\n      //编辑\n      this.$axios.get(this.api, {\n        params: {\n          action: \"getProblemsDetail\",\n          id: this.id\n        }\n      }).then(function (res) {\n        var data = res.data.msg; //修正数据类型\n\n        data.type = Number(data.type);\n        data.public = Boolean(data.public);\n        data.tags = _this.strToJson(data.tags);\n        data.options = _this.strToJson(data.options);\n\n        if (data.type != 3) {\n          _this.options_msg = data.options.arr.join(\"\\n\");\n          data.options.right = Number(data.options.right);\n        } else _this.options_msg = data.options.right;\n\n        _this.edit_options = false;\n        _this.data = data;\n      });\n    }\n  },\n  methods: {\n    post: function post() {\n      var _this2 = this;\n\n      this.postLoading = true;\n      this.data[\"author\"] = this.name;\n      this.$axios.post(this.api + \"?action=newProblem\", _qs.default.stringify(this.data)).then(function (res) {\n        if (res.data.code == 200) {\n          _this2.postLoading = false;\n          _this2.dialogVisible = false;\n\n          if (_this2.id != undefined) {\n            //完成编辑\n            _this2.$router.push({\n              path: \"/list-problems\"\n            });\n          } else {\n            //完成导入，提示是否继续\n            _this2.$confirm(\"添加题目成功！是否以相同配置继续添加？\", \"提示\", {\n              confirmButtonText: \"确定\",\n              cancelButtonText: \"取消\",\n              type: \"success\"\n            }).then(function () {\n              //初始化部分题目数据\n              _this2.data.description = \"\";\n              _this2.data.options = {\n                num: \"\",\n                // 选项总数\n                right: _this2.data.type == 1 ? [] : \"\",\n                // 正确答案\n                arr: \"\"\n              }; //初始化编辑界面\n\n              _this2.options_msg = \"\";\n              _this2.edit_options = true;\n            }).catch(function () {\n              //初始化全部信息\n              _this2.data = {\n                type: \"\",\n                //题型\n                subject: \"\",\n                tags: [\"LZGZ_EXAM\"],\n                public: true,\n                description: \"\",\n                options: {\n                  num: \"\",\n                  // 选项总数\n                  right: null,\n                  // 正确答案\n                  arr: \"\" // 选项内容\n\n                }\n              };\n              _this2.options_msg = \"\";\n              _this2.edit_options = true;\n            });\n          }\n        } else {\n          console.log(res.data);\n          _this2.postLoading = false;\n        }\n      }).catch(function (err) {\n        console.log(err);\n      });\n    },\n    chooseType: function chooseType(value) {\n      if (value == 1) this.data.options.right = [];else this.data.options.right = \"\";\n    },\n    handleClose: function handleClose(tag) {\n      this.data.tags.splice(this.data.tags.indexOf(tag), 1);\n    },\n    showInput: function showInput() {\n      var _this3 = this;\n\n      this.inputVisible = true;\n      this.$nextTick(function (_) {\n        _this3.$refs.saveTagInput.$refs.input.focus();\n      });\n    },\n    handleInputConfirm: function handleInputConfirm() {\n      var inputValue = this.inputValue;\n\n      if (inputValue) {\n        this.data.tags.push(inputValue);\n      }\n\n      this.inputVisible = false;\n      this.inputValue = \"\";\n    },\n    generateOptions: function generateOptions() {\n      //生成选项\n      this.edit_options = false;\n      var arr_tmp = this.options_msg.split(\"\\n\");\n      var arr = [];\n\n      for (var index in arr_tmp) {\n        if (arr_tmp[index].length > 0) {\n          arr.push(arr_tmp[index]);\n        }\n      }\n\n      this.$set(this.data.options, \"num\", arr.length);\n      this.$set(this.data.options, \"arr\", arr);\n    },\n    back: function back() {\n      this.$router.go(-1);\n    },\n    strToJson: function strToJson(objStr) {\n      //字符串转json\n      return new Function(\"return \" + objStr)();\n    }\n  },\n  computed: (0, _objectSpread2.default)({}, (0, _vuex.mapGetters)([\"name\"])),\n  components: {\n    Editor: _TinyMce.default\n  }\n};\nexports.default = _default;",null]}